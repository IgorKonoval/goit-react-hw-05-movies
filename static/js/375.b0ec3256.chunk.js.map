{"version":3,"file":"static/js/375.b0ec3256.chunk.js","mappings":"sPAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,I,MAAMC,EAAoB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACXV,EAAAA,EAAAA,IAAU,8BAADW,OAJlB,qCAI4D,KAAD,EAA7D,OAA6DL,EAAAE,EAAAI,KAAjEL,EAAID,EAAJC,KAAIC,EAAAK,OAAA,SACLN,GAAI,wBAAAC,EAAAM,OAAA,GAAAT,EAAA,KACZ,kBAHgC,OAAAH,EAAAa,MAAA,KAAAC,UAAA,K,mCCDpBC,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+BAIhBC,EAAYH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gUAYrBG,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iJ,SCKrC,EApBmB,SAAHlB,GAAoB,IAAdwB,EAAMxB,EAANwB,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OAAKF,GAA4B,IAAlBA,EAAOG,QAKpBC,EAAAA,EAAAA,KAACb,EAAI,CAAAc,SACFL,EAAOM,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAcF,EAAdE,eAAc,OAC/BL,EAAAA,EAAAA,KAACT,EAAS,CAAAU,UACRD,EAAAA,EAAAA,KAACP,EAAS,CAACa,GAAE,WAAAzB,OAAauB,GAAMG,MAAO,CAAEC,KAAMX,GAAWI,SACvDI,KAFWD,EAIJ,OAVTJ,EAAAA,EAAAA,KAAA,KAAAC,SAAG,qBAcd,E,SChBe,SAASQ,IACtB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCd,EAAMgB,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAmB9B,OAjBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,eAAAhD,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA8C,EAAAC,EAAA,OAAAhD,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACC,OAAnBsC,GAAa,GAAMxC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEgBT,EAAqB,IAAI,KAAD,EAAnDkD,EAAkB3C,EAAAI,KAClBwC,EAAiBD,EAAmBE,QAE1CT,EAAUQ,GAAgB5C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA8C,GAAA9C,EAAA,UAE1B+C,EAAAA,EAAAA,IAAK/C,EAAA8C,IAAQ,QAEO,OAFP9C,EAAAC,KAAA,GAEbuC,GAAa,GAAOxC,EAAAgD,OAAA,6BAAAhD,EAAAM,OAAA,GAAAT,EAAA,wBAEvB,kBAZgB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAajBkC,GACF,GAAG,KAGDO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA3B,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBACJD,EAAAA,EAAAA,KAAC6B,EAAU,CAACjC,OAAQA,IACnBqB,IAAajB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,MAG3B,C","sources":["components/Api.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '2059bc5490f21765be4f3ae242d4cf1d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getPopularMoviengAll = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 25px;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n  padding: 7px 20px;\n  border-radius: 5px;\n  box-shadow: 2px -2px 5px 0 rgba(0, 0, 0, 0.1),\n    -2px -2px 5px 0 rgba(0, 0, 0, 0.1), 2px 2px 5px 0 rgba(0, 0, 0, 0.1),\n    -2px 2px 5px 0 rgba(0, 0, 0, 0.1);\n  font-size: 20px;\n  letter-spacing: 2px;\n  transition: 0.3s all linear;\n`;\n\nexport const MovieLink = styled(Link)`\n  font-size: 20px;\n  font-weight: 600;\n  text-decoration: none;\n  color: black;\n  &:hover,\n  &:focus {\n    color: #cc00ff;\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { List, MovieItem, MovieLink } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  if (!movies || movies.length === 0) {\n    return <p> Movies not found</p>;\n  }\n\n  return (\n    <List>\n      {movies.map(({ id, original_title }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            {original_title}\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { getPopularMoviengAll } from '../components/Api';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport toast from 'react-hot-toast';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const popularMoviengData = await getPopularMoviengAll('');\n        const popularMovieng = popularMoviengData.results;\n\n        setMovies(popularMovieng);\n      } catch (error) {\n        toast(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      <h1>Popular Movies</h1>\n      <MoviesList movies={movies} />\n      {isLoading && <Loader />}\n    </>\n  );\n}\n"],"names":["axios","getPopularMoviengAll","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","List","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieLink","Link","_templateObject3","movies","location","useLocation","length","_jsx","children","map","_ref2","id","original_title","to","state","from","HomePage","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchMovies","popularMoviengData","popularMovieng","results","t0","toast","finish","_jsxs","_Fragment","MoviesList","Loader"],"sourceRoot":""}