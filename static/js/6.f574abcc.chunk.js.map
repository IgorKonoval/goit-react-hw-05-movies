{"version":3,"file":"static/js/6.f574abcc.chunk.js","mappings":"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","sources":["components/Api.js","pages/MoviesDenailsPage.styled.js","pages/MoviesDetailsPage.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '2059bc5490f21765be4f3ae242d4cf1d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getPopularMoviengAll = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieWrapper = styled.div`\n  margin-left: 15px;\n`;\n\nexport const MovieTitle = styled.h1`\n  margin-bottom: 15px;\n`;\n\nexport const MovieSubtitle = styled.h2`\n  margin-bottom: 10px;\n  margin-top: 15px;\n`;\n\nexport const AddInfo = styled.h3`\n  margin-bottom: 10px;\n  margin-top: 65px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  margin: 0 20px;\n  border-radius: 5px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  margin-top: 20px;\n`;\n\nexport const GenresList = styled.ul`\n  display: inline-flex;\n`;\n\nexport const LinkAdd = styled(Link)`\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../components/Api';\nimport { Loader } from '../components/Loader/Loader';\nimport {\n  Button,\n  Container,\n  LinkAdd,\n  MovieWrapper,\n  MovieTitle,\n  MovieSubtitle,\n  AddInfo,\n  GenresList,\n} from './MoviesDenailsPage.styled';\n\nexport default function MoviesDetailsPage() {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieInfo, setMovieInfo] = useState(null);\n  const location = useLocation();\n  const backLink = useRef(location);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setIsLoading(true);\n      try {\n        const movieDetails = await getMovieDetails(movieId);\n        setMovieInfo(movieDetails);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n  const {\n    original_title,\n    popularity,\n    overview,\n    genres,\n    release_date,\n    poster_path,\n  } = movieInfo || {};\n\n  return (\n    <>\n      <Link to={backLink.current.state?.from ?? '/'}>\n        <Button type=\"button\">Go Back</Button>\n      </Link>\n      {isLoading && <Loader />}\n      {movieInfo && (\n        <Container>\n          <img\n            style={{ borderRadius: 5 }}\n            width={300}\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : `https://via.placeholder.com/300x300/258DC8/E0F6FD?text=Image+is+not+availible`\n            }\n            alt={original_title}\n          />\n          <MovieWrapper>\n            <MovieTitle>\n              {original_title} ({release_date.slice(0, 4)})\n            </MovieTitle>\n            <p>User score: {Math.round(popularity)}</p>\n            <MovieSubtitle>Overview</MovieSubtitle>\n            <p>{overview}</p>\n            <MovieSubtitle>Genres</MovieSubtitle>\n            <GenresList>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name},</li>\n              ))}\n            </GenresList>\n            <AddInfo>Additional information</AddInfo>\n            <ul>\n              <li>\n                <LinkAdd to=\"cast\">Cast: see more</LinkAdd>\n              </li>\n              <li>\n                <LinkAdd to=\"reviews\">Reviews: see more</LinkAdd>\n              </li>\n            </ul>\n          </MovieWrapper>\n        </Container>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["API_KEY","axios","getPopularMoviengAll","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","getByQuery","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","MovieWrapper","styled","_templateObject","_taggedTemplateLiteral","MovieTitle","_templateObject2","MovieSubtitle","_templateObject3","AddInfo","_templateObject4","Button","_templateObject5","Container","_templateObject6","GenresList","_templateObject7","LinkAdd","Link","_templateObject8","MoviesDetailsPage","_backLink$current$sta","_backLink$current$sta2","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","movieInfo","setMovieInfo","location","useLocation","backLink","useRef","useEffect","fetchMovieDetails","movieDetails","t0","console","log","finish","original_title","popularity","overview","genres","release_date","poster_path","_jsxs","_Fragment","children","_jsx","to","current","state","from","type","Loader","style","borderRadius","width","src","alt","slice","Math","round","map","genre","name","id","Suspense","fallback","Outlet"],"sourceRoot":""}